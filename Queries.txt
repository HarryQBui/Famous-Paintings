# 1. Fetch all the paintings which are not displayed on any museums?
SELECT *
FROM famous_painting.work
WHERE museum_id IS NULL;

# 2. Are there museums without any paintings?
SELECT * 
FROM famous_painting.museum m
WHERE NOT EXISTS (
  SELECT 1
  FROM famous_painting.work w
  WHERE w.museum_id = m.museum_id
);

# 3. How many paintings have an asking price of more than their regular price?
SELECT COUNT(*) AS count
FROM famous_painting.product_size
WHERE sale_price > regular_price;

# 4. Identify the paintings whose asking price is less than 50% of its regular price
SELECT *
FROM famous_painting.product_size
WHERE sale_price < (regular_price/2);

# 5. Which canva size costs the most?
SELECT cs.label AS canvas_label,
       ps.sale_price AS price
FROM  (SELECT *,
       RANK() OVER (ORDER BY sale_price DESC) AS rank
FROM famous_painting.product_size) AS ps
INNER JOIN famous_painting.canvas_size AS cs
ON SAFE_CAST(ps.size_id AS INT) = cs.size_id
ORDER BY ps.rank ASC 
LIMIT 10;


# 6. Delete duplicate records from work, product_size, subject and image_link tables.
-- Due to BigQuery's immutable storage characteristic, the approach is to recreate the table to deduplicate.
CREATE OR REPLACE TABLE famous_painting.product_size AS
SELECT DISTINCT
  work_id,
  size_id,
  sale_price,
  regular_price
FROM
  famous_painting.product_size;

CREATE OR REPLACE TABLE famous_painting.work AS
SELECT DISTINCT
  work_id,
  name,
  artist_id,
  style,
  museum_id
FROM
  famous_painting.work;

CREATE OR REPLACE TABLE famous_painting.subject AS
SELECT DISTINCT
  s.work_id,
  s.subject
FROM
  famous_painting.subject AS s;

CREATE OR REPLACE TABLE famous_painting.image_link AS
SELECT DISTINCT
  work_id,
  url,
  thumbnail_small_url,
  thumbnail_large_url
FROM
  famous_painting.image_link;


# 7. Identify the museums with invalid city information in the given dataset
-- Use Regex to match city name starting with numbers
SELECT *
FROM famous_painting.museum
WHERE REGEXP_CONTAINS(city, '^[0-9]');


# 8. Museum_Hours table has 1 invalid entry. Identify it and remove it.
-- Identify the duplicate entry. museum_id = 80, Saturday is duplicated
SELECT museum_id,
       day,
       COUNT(*) AS count
FROM famous_painting.museum_hours
GROUP BY museum_id,day
ORDER BY count DESC;

-- Deduplicate by recreating the table museum_hours
CREATE OR REPLACE TABLE famous_painting.museum_hours AS
SELECT DISTINCT 
  museum_id,
  day,
  open,
  close
FROM
  famous_painting.museum_hours;


# 9. Fetch the top 10 most famous painting subject
SELECT s.subject,
       COUNT(*) AS count
FROM famous_painting.subject s
GROUP BY s.subject
ORDER BY 2 DESC
LIMIT 10;


# 10. Identify the museums which are open on both Sunday & Monday? Return the museum name & city
SELECT name,
       city
FROM famous_painting.museum
WHERE museum_id IN ( 
                    SELECT DISTINCT museum_id
                    FROM famous_painting.museum_hours
                    WHERE day = 'Monday' OR day = 'Sunday'
                    GROUP BY museum_id
                    HAVING COUNT(*) > 1
                    );


# 11. How many museums are open every single day?
SELECT museum_id,
       COUNT(*) AS days_open
FROM famous_painting.museum_hours
GROUP BY museum_id
HAVING days_open = 7
ORDER BY museum_id;


# 12. Which are the top 5 most popular museum? (Popularity is defined based on most no of paintings in a museum).
SELECT *
FROM famous_painting.museum;

# 13. Who are the top 5 most popular artist? (Popularity is defined based on most no of paintings done by an artist).

# 14. Display the 3 least popular canva sizes.

# 15. Which museum is open for the longest during a day? Return the museum name, state, hours open and day.
-- clean the extra spaces typo in 2 time columns
UPDATE famous_painting.museum_hours 
SET close = REPLACE(close,' ',''),
    open = Replace(open,' ','')
WHERE true;

-- using RANK()
SELECT 
  m.name AS museum_name,
  m.state AS state,
  mh.day,
  PARSE_TIME('%I:%M:%p', open) AS open_time,
  PARSE_TIME('%I:%M:%p', close) AS closing_time,
  PARSE_TIME('%I:%M:%p', close) - PARSE_TIME('%I:%M:%p', open) as duration,
  RANK() OVER(ORDER BY TIME_DIFF(PARSE_TIME('%I:%M:%p', close),PARSE_TIME('%I:%M:%p', open),MINUTE) DESC) AS rank
FROM famous_painting.museum_hours mh
LEFT JOIN famous_painting.museum m
ON mh.museum_id = m.museum_id
ORDER BY rank
LIMIT 1;

-- Alternative method using CTE
WITH operating_hours AS (
  SELECT 
    museum_id, day,
    PARSE_TIME('%I:%M:%p', open) AS open_time,
    PARSE_TIME('%I:%M:%p', close) AS closing_time,   
  FROM famous_painting.museum_hours
)

SELECT 
  m.name, 
  m.state, 
  mh.open, 
  mh.close, 
  mh.day
FROM famous_painting.museum m 
LEFT JOIN famous_painting.museum_hours mh
ON m.museum_id = mh.museum_id
WHERE m.museum_id = (
  SELECT museum_id
  FROM operating_hours
  GROUP BY museum_id, day
  ORDER BY MAX(closing_time - open_time) DESC
  LIMIT 1
);

# 16. Which museum has the most no of most popular painting style?


# 17. Identify the artists whose paintings are displayed in multiple countries.


# 18. Display the country and city with most no of museums. Return 2 seperate columns to mention the city and country. If there are multiple values, seperate them with comma.

WITH cte_country AS 
  (SELECT country,
        COUNT(*),
        RANK() OVER(ORDER BY COUNT(*) DESC) AS rank
  FROM famous_painting.museum
  GROUP BY country),
     cte_city AS 
  (SELECT city,
        COUNT(*),
        RANK() OVER(ORDER BY COUNT(*) DESC) AS rank
  FROM famous_painting.museum
  GROUP BY city)

SELECT 
  STRING_AGG(DISTINCT country,', ') AS country,
  STRING_AGG(city,', ') AS city
FROM cte_country
CROSS JOIN cte_city
WHERE cte_country.rank = 1 AND cte_city.rank = 1;

# 19. Identify the artist and the museum where the most expensive and least expensive painting is placed. Display the artist name, sale_price, painting name, museum name, museum city and canvas label

WITH cte AS (
SELECT 
  *, 
  RANK() OVER(ORDER BY sale_price DESC) AS rank_expensive,
  RANK() OVER(ORDER BY sale_price ASC) AS rank_cheap
FROM famous_painting.product_size
)

SELECT 
  a.full_name AS artist_name,
  cte.sale_price AS sale_price,
  w.name AS painting_name,
  m.name AS museum_name,
  m.city AS museum_city,
  cs.label AS canvas_label
FROM cte 
INNER JOIN famous_painting.work w
ON cte.work_id = w.work_id
INNER JOIN famous_painting.artist a
ON w.artist_id = a.artist_id
INNER JOIN famous_painting.museum m
ON w.museum_id = m.museum_id
INNER JOIN famous_painting.canvas_size cs
ON SAFE_CAST(cte.size_id AS INT) = cs.size_id
WHERE rank_expensive = 1 OR rank_cheap =1;

# 20. Which country has the 5th highest no of paintings?

# 21. Which are the 3 most popular and 3 least popular painting styles?

# 22. Which artist has the most no of Portraits paintings outside USA?. Display artist name, no of paintings and the artist nationality.